`timescale 1ns / 1ps


module c_add4(sum,Cout,A,B,Cin
                     );
                     input [3:0] A,B;
                     input Cin;
                     output [3:0] sum;
                     output Cout;
                     wire P0,P1,P2,P3,G0,G1,G2,G3,T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,C1,C2,C3;
                     
                     and g1(G0,A[0],B[0]), g2(G1,A[1],B[1]), g3(G2,A[2],B[2]),
                         g17(G3,A[3],B[3]);
                     xor g4(P0,A[0],B[0]), g5(P1,A[1],B[1]), g6(P2,A[2],B[2]),
                         g18(P3,A[3],B[3]);
                     and g7(T0,P0,Cin), g8(T2,G0,P1), g9(T6,P2,G1), g10(T3,T0,P1), 
                         g11(T5,T2,P2), g12(T4,T3,P2), g13(T7,T4,P3), g19(T9,T6,P3), 
                         g20(T10,C3,P3), g21(T8,P3,T5);
                     or g14(C1,T0,G0), g15(C2,T3,T2,G1), g16(C3,T4,T5,T6,G2), 
                        g22(Cout,T7,T8,T9,T10,G3);
                     xor g23(sum[0],P0,Cin), g24(sum[1],P1,C1), g25(sum[2],P2,C2),
                         g26(sum[3],P3,C3);
                     
endmodule
